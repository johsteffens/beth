/** This file was generated by the beth-precode-compiler. Not suitable for manual editing.
 *
 *  Copyright and License:
 *    If a specification exists for the repository or folder in which the file is located,
 *    that specification shall apply. Otherwise, the Copyright and License of the associated
 *    source code files containing beth-precode shall apply.
 */

#ifndef BADAPT_PRECODED_H
#define BADAPT_PRECODED_H

#include "bcore_control.h"


/**********************************************************************************************************************/
// source: badapt_adaptive

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_dynamics

#define TYPEOF_badapt_dynamics 776275350
#define TYPEOF_badapt_dynamics_s 1839376072
  #define TYPEOF_badapt_dynamics_std_s 2426636234
  #define BETH_EXPAND_ITEM_badapt_dynamics_std_s \
    BCORE_DECLARE_OBJECT( badapt_dynamics_std_s ) \
      {aware_t _;f3_t epsilon;f3_t lambda_l1;f3_t lambda_l2;}; \
    void badapt_dynamics_std_s_weights_adapt( const badapt_dynamics_std_s* o, const bmath_vf3_s* in, bmath_mf3_s* w, const bmath_vf3_s* grad_out, f3_t epsilon_factor );
#define BETH_EXPAND_GROUP_badapt_dynamics \
  BCORE_FORWARD_OBJECT( badapt_dynamics ); \
  typedef void (*badapt_dynamics_weights_adapt)( const badapt_dynamics* o, const bmath_vf3_s* in, bmath_mf3_s* w, const bmath_vf3_s* grad_out, f3_t epsilon_factor ); \
  BCORE_DECLARE_SPECT( badapt_dynamics ) \
  { \
      bcore_spect_header_s header; \
      badapt_dynamics_weights_adapt weights_adapt; \
  }; \
  static inline badapt_dynamics* badapt_dynamics_t_create( tp_t t ) { bcore_trait_assert_satisfied_type( TYPEOF_badapt_dynamics, t ); return ( badapt_dynamics* )bcore_inst_t_create( t ); } \
  static inline badapt_dynamics* badapt_dynamics_a_clone( const badapt_dynamics* o ) { return ( badapt_dynamics* )bcore_inst_a_clone( ( bcore_inst* )o ); } \
  static inline void badapt_dynamics_a_discard( badapt_dynamics* o ) { bcore_inst_a_discard( ( bcore_inst* )o ); } \
  static inline void badapt_dynamics_a_replicate( badapt_dynamics** o, const badapt_dynamics* src ) { bcore_inst_a_replicate( ( bcore_inst** )o, ( bcore_inst* )src ); } \
  static inline void badapt_dynamics_a_weights_adapt( const badapt_dynamics* o, const bmath_vf3_s* in, bmath_mf3_s* w, const bmath_vf3_s* grad_out, f3_t epsilon_factor ) { badapt_dynamics_s_get_aware( o )->weights_adapt( o, in, w, grad_out, epsilon_factor ); } \
  static inline bl_t badapt_dynamics_a_defines_weights_adapt( const badapt_dynamics* o ) { return true; } \
  BETH_EXPAND_ITEM_badapt_dynamics_std_s

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_adaptive

#define TYPEOF_badapt_adaptive 3626296374
#define TYPEOF_badapt_adaptive_s 2278398760
#define BETH_EXPAND_GROUP_badapt_adaptive \
  BCORE_FORWARD_OBJECT( badapt_adaptive ); \
  typedef sz_t (*badapt_adaptive_get_in_size)( const badapt_adaptive* o ); \
  typedef sz_t (*badapt_adaptive_get_out_size)( const badapt_adaptive* o ); \
  typedef void (*badapt_adaptive_infer)( const badapt_adaptive* o, const bmath_vf3_s* in, bmath_vf3_s* out ); \
  typedef void (*badapt_adaptive_minfer)( badapt_adaptive* o, const bmath_vf3_s* in, bmath_vf3_s* out ); \
  typedef void (*badapt_adaptive_bgrad)( const badapt_adaptive* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out ); \
  typedef void (*badapt_adaptive_bgrad_adapt)( badapt_adaptive* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out ); \
  typedef void (*badapt_adaptive_get_dynamics_std)( const badapt_adaptive* o, badapt_dynamics_std_s* dynamics ); \
  typedef void (*badapt_adaptive_set_dynamics_std)( badapt_adaptive* o, const badapt_dynamics_std_s* dynamics ); \
  typedef void (*badapt_adaptive_arc_to_sink)( const badapt_adaptive* o, bcore_sink* sink ); \
  typedef f3_t (*badapt_adaptive_infer_f3)( const badapt_adaptive* o, const bmath_vf3_s* in ); \
  typedef void (*badapt_adaptive_adapt_loss)( badapt_adaptive* o, const badapt_loss* loss, const bmath_vf3_s* in, const bmath_vf3_s* target, bmath_vf3_s* out ); \
  typedef f3_t (*badapt_adaptive_adapt_loss_f3)( badapt_adaptive* o, const badapt_loss* loss, const bmath_vf3_s* in, f3_t target ); \
  BCORE_DECLARE_SPECT( badapt_adaptive ) \
  { \
      bcore_spect_header_s header; \
      badapt_adaptive_get_in_size get_in_size; \
      badapt_adaptive_get_out_size get_out_size; \
      badapt_adaptive_infer infer; \
      badapt_adaptive_minfer minfer; \
      badapt_adaptive_bgrad bgrad; \
      badapt_adaptive_bgrad_adapt bgrad_adapt; \
      badapt_adaptive_get_dynamics_std get_dynamics_std; \
      badapt_adaptive_set_dynamics_std set_dynamics_std; \
      badapt_adaptive_arc_to_sink arc_to_sink; \
      badapt_adaptive_infer_f3 infer_f3; \
      badapt_adaptive_adapt_loss adapt_loss; \
      badapt_adaptive_adapt_loss_f3 adapt_loss_f3; \
  }; \
  static inline badapt_adaptive* badapt_adaptive_t_create( tp_t t ) { bcore_trait_assert_satisfied_type( TYPEOF_badapt_adaptive, t ); return ( badapt_adaptive* )bcore_inst_t_create( t ); } \
  static inline badapt_adaptive* badapt_adaptive_a_clone( const badapt_adaptive* o ) { return ( badapt_adaptive* )bcore_inst_a_clone( ( bcore_inst* )o ); } \
  static inline void badapt_adaptive_a_discard( badapt_adaptive* o ) { bcore_inst_a_discard( ( bcore_inst* )o ); } \
  static inline void badapt_adaptive_a_replicate( badapt_adaptive** o, const badapt_adaptive* src ) { bcore_inst_a_replicate( ( bcore_inst** )o, ( bcore_inst* )src ); } \
  static inline sz_t badapt_adaptive_a_get_in_size( const badapt_adaptive* o ) { return badapt_adaptive_s_get_aware( o )->get_in_size( o ); } \
  static inline bl_t badapt_adaptive_a_defines_get_in_size( const badapt_adaptive* o ) { return true; } \
  static inline sz_t badapt_adaptive_a_get_out_size( const badapt_adaptive* o ) { return badapt_adaptive_s_get_aware( o )->get_out_size( o ); } \
  static inline bl_t badapt_adaptive_a_defines_get_out_size( const badapt_adaptive* o ) { return true; } \
  static inline void badapt_adaptive_a_infer( const badapt_adaptive* o, const bmath_vf3_s* in, bmath_vf3_s* out ) { badapt_adaptive_s_get_aware( o )->infer( o, in, out ); } \
  static inline bl_t badapt_adaptive_a_defines_infer( const badapt_adaptive* o ) { return badapt_adaptive_s_get_aware( o )->infer != NULL; } \
  static inline void badapt_adaptive_a_minfer( badapt_adaptive* o, const bmath_vf3_s* in, bmath_vf3_s* out ) { badapt_adaptive_s_get_aware( o )->minfer( o, in, out ); } \
  static inline bl_t badapt_adaptive_a_defines_minfer( const badapt_adaptive* o ) { return true; } \
  static inline void badapt_adaptive_a_bgrad( const badapt_adaptive* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out ) { badapt_adaptive_s_get_aware( o )->bgrad( o, grad_in, grad_out ); } \
  static inline bl_t badapt_adaptive_a_defines_bgrad( const badapt_adaptive* o ) { return badapt_adaptive_s_get_aware( o )->bgrad != NULL; } \
  static inline void badapt_adaptive_a_bgrad_adapt( badapt_adaptive* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out ) { badapt_adaptive_s_get_aware( o )->bgrad_adapt( o, grad_in, grad_out ); } \
  static inline bl_t badapt_adaptive_a_defines_bgrad_adapt( const badapt_adaptive* o ) { return true; } \
  static inline void badapt_adaptive_a_get_dynamics_std( const badapt_adaptive* o, badapt_dynamics_std_s* dynamics ) { badapt_adaptive_s_get_aware( o )->get_dynamics_std( o, dynamics ); } \
  static inline bl_t badapt_adaptive_a_defines_get_dynamics_std( const badapt_adaptive* o ) { return badapt_adaptive_s_get_aware( o )->get_dynamics_std != NULL; } \
  static inline void badapt_adaptive_a_set_dynamics_std( badapt_adaptive* o, const badapt_dynamics_std_s* dynamics ) { badapt_adaptive_s_get_aware( o )->set_dynamics_std( o, dynamics ); } \
  static inline bl_t badapt_adaptive_a_defines_set_dynamics_std( const badapt_adaptive* o ) { return badapt_adaptive_s_get_aware( o )->set_dynamics_std != NULL; } \
  static inline void badapt_adaptive_a_arc_to_sink( const badapt_adaptive* o, bcore_sink* sink ) { badapt_adaptive_s_get_aware( o )->arc_to_sink( o, sink ); } \
  static inline bl_t badapt_adaptive_a_defines_arc_to_sink( const badapt_adaptive* o ) { return true; } \
  void badapt_adaptive_arc_to_sink_fallback( const badapt_adaptive* o, bcore_sink* sink ); \
  static inline f3_t badapt_adaptive_a_infer_f3( const badapt_adaptive* o, const bmath_vf3_s* in ) { return badapt_adaptive_s_get_aware( o )->infer_f3( o, in ); } \
  static inline bl_t badapt_adaptive_a_defines_infer_f3( const badapt_adaptive* o ) { return true; } \
  f3_t badapt_adaptive_infer_f3_fallback( const badapt_adaptive* o, const bmath_vf3_s* in ); \
  static inline void badapt_adaptive_a_adapt_loss( badapt_adaptive* o, const badapt_loss* loss, const bmath_vf3_s* in, const bmath_vf3_s* target, bmath_vf3_s* out ) { badapt_adaptive_s_get_aware( o )->adapt_loss( o, loss, in, target, out ); } \
  static inline bl_t badapt_adaptive_a_defines_adapt_loss( const badapt_adaptive* o ) { return true; } \
  void badapt_adaptive_adapt_loss_fallback( badapt_adaptive* o, const badapt_loss* loss, const bmath_vf3_s* in, const bmath_vf3_s* target, bmath_vf3_s* out ); \
  static inline f3_t badapt_adaptive_a_adapt_loss_f3( badapt_adaptive* o, const badapt_loss* loss, const bmath_vf3_s* in, f3_t target ) { return badapt_adaptive_s_get_aware( o )->adapt_loss_f3( o, loss, in, target ); } \
  static inline bl_t badapt_adaptive_a_defines_adapt_loss_f3( const badapt_adaptive* o ) { return true; } \
  f3_t badapt_adaptive_adapt_loss_f3_fallback( badapt_adaptive* o, const badapt_loss* loss, const bmath_vf3_s* in, f3_t target );

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_builder

#define TYPEOF_badapt_builder 2907309879
#define TYPEOF_badapt_builder_s 3971266449
#define BETH_EXPAND_GROUP_badapt_builder \
  BCORE_FORWARD_OBJECT( badapt_builder ); \
  typedef sz_t (*badapt_builder_get_in_size)( const badapt_builder* o ); \
  typedef void (*badapt_builder_set_in_size)( badapt_builder* o, sz_t size ); \
  typedef sz_t (*badapt_builder_get_out_size)( const badapt_builder* o ); \
  typedef void (*badapt_builder_set_out_size)( badapt_builder* o, sz_t size ); \
  typedef badapt_adaptive* (*badapt_builder_build)( const badapt_builder* o ); \
  BCORE_DECLARE_SPECT( badapt_builder ) \
  { \
      bcore_spect_header_s header; \
      badapt_builder_get_in_size get_in_size; \
      badapt_builder_set_in_size set_in_size; \
      badapt_builder_get_out_size get_out_size; \
      badapt_builder_set_out_size set_out_size; \
      badapt_builder_build build; \
  }; \
  static inline badapt_builder* badapt_builder_t_create( tp_t t ) { bcore_trait_assert_satisfied_type( TYPEOF_badapt_builder, t ); return ( badapt_builder* )bcore_inst_t_create( t ); } \
  static inline badapt_builder* badapt_builder_a_clone( const badapt_builder* o ) { return ( badapt_builder* )bcore_inst_a_clone( ( bcore_inst* )o ); } \
  static inline void badapt_builder_a_discard( badapt_builder* o ) { bcore_inst_a_discard( ( bcore_inst* )o ); } \
  static inline void badapt_builder_a_replicate( badapt_builder** o, const badapt_builder* src ) { bcore_inst_a_replicate( ( bcore_inst** )o, ( bcore_inst* )src ); } \
  static inline sz_t badapt_builder_a_get_in_size( const badapt_builder* o ) { return badapt_builder_s_get_aware( o )->get_in_size( o ); } \
  static inline bl_t badapt_builder_a_defines_get_in_size( const badapt_builder* o ) { return true; } \
  static inline void badapt_builder_a_set_in_size( badapt_builder* o, sz_t size ) { badapt_builder_s_get_aware( o )->set_in_size( o, size ); } \
  static inline bl_t badapt_builder_a_defines_set_in_size( const badapt_builder* o ) { return true; } \
  static inline sz_t badapt_builder_a_get_out_size( const badapt_builder* o ) { return badapt_builder_s_get_aware( o )->get_out_size( o ); } \
  static inline bl_t badapt_builder_a_defines_get_out_size( const badapt_builder* o ) { return true; } \
  static inline void badapt_builder_a_set_out_size( badapt_builder* o, sz_t size ) { badapt_builder_s_get_aware( o )->set_out_size( o, size ); } \
  static inline bl_t badapt_builder_a_defines_set_out_size( const badapt_builder* o ) { return true; } \
  static inline badapt_adaptive* badapt_builder_a_build( const badapt_builder* o ) { return badapt_builder_s_get_aware( o )->build( o ); } \
  static inline bl_t badapt_builder_a_defines_build( const badapt_builder* o ) { return true; }

/**********************************************************************************************************************/
// source: badapt_problem

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_problem

#define TYPEOF_badapt_problem 978854679
  #define TYPEOF_badapt_problem_sine_random_s 232405763
  #define BETH_EXPAND_ITEM_badapt_problem_sine_random_s \
    BCORE_DECLARE_OBJECT( badapt_problem_sine_random_s ) \
      {aware_t _;sz_t input_size;u2_t rval;f3_t pos_tgt;f3_t neg_tgt;badapt_loss* preferred_loss;}; \
    const badapt_loss* badapt_problem_sine_random_s_preferred_loss( const badapt_problem_sine_random_s* o ); \
    sz_t badapt_problem_sine_random_s_get_in_size( const badapt_problem_sine_random_s* o ); \
    sz_t badapt_problem_sine_random_s_get_out_size( const badapt_problem_sine_random_s* o ); \
    void badapt_problem_sine_random_s_fetch_sample_tio( badapt_problem_sine_random_s* o, bmath_vf3_s* in, bmath_vf3_s* out ); \
    void badapt_problem_sine_random_s_fetch_sample_vio( badapt_problem_sine_random_s* o, bmath_vf3_s* in, bmath_vf3_s* out );
  #define TYPEOF_badapt_problem_polynom_s 4086382194
  #define BETH_EXPAND_ITEM_badapt_problem_polynom_s \
    BCORE_DECLARE_OBJECT( badapt_problem_polynom_s ) \
      {aware_t _;sz_t input_size;sz_t output_size;f3_t range;u2_t rval;f3_t noise_level;badapt_loss* preferred_loss;}; \
    const badapt_loss* badapt_problem_polynom_s_preferred_loss( const badapt_problem_polynom_s* o ); \
    sz_t badapt_problem_polynom_s_get_in_size( const badapt_problem_polynom_s* o ); \
    sz_t badapt_problem_polynom_s_get_out_size( const badapt_problem_polynom_s* o ); \
    void badapt_problem_polynom_s_fetch_sample_tio( badapt_problem_polynom_s* o, bmath_vf3_s* in, bmath_vf3_s* out ); \
    void badapt_problem_polynom_s_fetch_sample_vio( badapt_problem_polynom_s* o, bmath_vf3_s* in, bmath_vf3_s* out );
  #define TYPEOF_badapt_problem_binary_add_s 2458357191
  #define BETH_EXPAND_ITEM_badapt_problem_binary_add_s \
    BCORE_DECLARE_OBJECT( badapt_problem_binary_add_s ) \
      {aware_t _;sz_t bits;u2_t rval;f3_t val_h;f3_t val_l;badapt_loss* preferred_loss;}; \
    const badapt_loss* badapt_problem_binary_add_s_preferred_loss( const badapt_problem_binary_add_s* o ); \
    sz_t badapt_problem_binary_add_s_get_in_size( const badapt_problem_binary_add_s* o ); \
    sz_t badapt_problem_binary_add_s_get_out_size( const badapt_problem_binary_add_s* o ); \
    void badapt_problem_binary_add_s_fetch_sample_tio( badapt_problem_binary_add_s* o, bmath_vf3_s* in, bmath_vf3_s* out ); \
    void badapt_problem_binary_add_s_fetch_sample_vio( badapt_problem_binary_add_s* o, bmath_vf3_s* in, bmath_vf3_s* out );
  #define TYPEOF_badapt_problem_binary_mul_s 2588868138
  #define BETH_EXPAND_ITEM_badapt_problem_binary_mul_s \
    BCORE_DECLARE_OBJECT( badapt_problem_binary_mul_s ) \
      {aware_t _;sz_t bits;u2_t rval;f3_t val_h;f3_t val_l;badapt_loss* preferred_loss;}; \
    const badapt_loss* badapt_problem_binary_mul_s_preferred_loss( const badapt_problem_binary_mul_s* o ); \
    sz_t badapt_problem_binary_mul_s_get_in_size( const badapt_problem_binary_mul_s* o ); \
    sz_t badapt_problem_binary_mul_s_get_out_size( const badapt_problem_binary_mul_s* o ); \
    void badapt_problem_binary_mul_s_fetch_sample_tio( badapt_problem_binary_mul_s* o, bmath_vf3_s* in, bmath_vf3_s* out ); \
    void badapt_problem_binary_mul_s_fetch_sample_vio( badapt_problem_binary_mul_s* o, bmath_vf3_s* in, bmath_vf3_s* out );
  #define TYPEOF_badapt_problem_binary_xsg3_s 1139719047
  #define BETH_EXPAND_ITEM_badapt_problem_binary_xsg3_s \
    BCORE_DECLARE_OBJECT( badapt_problem_binary_xsg3_s ) \
      {aware_t _;sz_t bits;u2_t rval;f3_t val_h;f3_t val_l;badapt_loss* preferred_loss;}; \
    const badapt_loss* badapt_problem_binary_xsg3_s_preferred_loss( const badapt_problem_binary_xsg3_s* o ); \
    sz_t badapt_problem_binary_xsg3_s_get_in_size( const badapt_problem_binary_xsg3_s* o ); \
    sz_t badapt_problem_binary_xsg3_s_get_out_size( const badapt_problem_binary_xsg3_s* o ); \
    void badapt_problem_binary_xsg3_s_fetch_sample_tio( badapt_problem_binary_xsg3_s* o, bmath_vf3_s* in, bmath_vf3_s* out ); \
    void badapt_problem_binary_xsg3_s_fetch_sample_vio( badapt_problem_binary_xsg3_s* o, bmath_vf3_s* in, bmath_vf3_s* out );
  #define TYPEOF_badapt_problem_binary_hash_s 2595152420
  #define BETH_EXPAND_ITEM_badapt_problem_binary_hash_s \
    BCORE_DECLARE_OBJECT( badapt_problem_binary_hash_s ) \
      {aware_t _;sz_t bits;u2_t rval;f3_t val_h;f3_t val_l;bl_t reverse;badapt_loss* preferred_loss;}; \
    const badapt_loss* badapt_problem_binary_hash_s_preferred_loss( const badapt_problem_binary_hash_s* o ); \
    sz_t badapt_problem_binary_hash_s_get_in_size( const badapt_problem_binary_hash_s* o ); \
    sz_t badapt_problem_binary_hash_s_get_out_size( const badapt_problem_binary_hash_s* o ); \
    void badapt_problem_binary_hash_s_fetch_sample_tio( badapt_problem_binary_hash_s* o, bmath_vf3_s* in, bmath_vf3_s* out ); \
    void badapt_problem_binary_hash_s_fetch_sample_vio( badapt_problem_binary_hash_s* o, bmath_vf3_s* in, bmath_vf3_s* out );
#define BETH_EXPAND_GROUP_badapt_problem \
  BETH_EXPAND_ITEM_badapt_problem_sine_random_s \
  BETH_EXPAND_ITEM_badapt_problem_polynom_s \
  BETH_EXPAND_ITEM_badapt_problem_binary_add_s \
  BETH_EXPAND_ITEM_badapt_problem_binary_mul_s \
  BETH_EXPAND_ITEM_badapt_problem_binary_xsg3_s \
  BETH_EXPAND_ITEM_badapt_problem_binary_hash_s

/**********************************************************************************************************************/
// source: badapt_activator

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_activation

#define TYPEOF_badapt_activation 1242735104
#define TYPEOF_badapt_activation_s 314872026
  #define TYPEOF_badapt_activation_lgst_s 2249276893
  #define BETH_EXPAND_ITEM_badapt_activation_lgst_s \
    BCORE_DECLARE_OBJECT( badapt_activation_lgst_s ) \
      {aware_t _;}; \
    f3_t badapt_activation_lgst_s_fx( const badapt_activation_lgst_s* o, f3_t x ); \
    f3_t badapt_activation_lgst_s_dy( const badapt_activation_lgst_s* o, f3_t y );
  #define TYPEOF_badapt_activation_lgst_hard_s 1657353435
  #define BETH_EXPAND_ITEM_badapt_activation_lgst_hard_s \
    BCORE_DECLARE_OBJECT( badapt_activation_lgst_hard_s ) \
      {aware_t _;}; \
    f3_t badapt_activation_lgst_hard_s_fx( const badapt_activation_lgst_hard_s* o, f3_t x ); \
    f3_t badapt_activation_lgst_hard_s_dy( const badapt_activation_lgst_hard_s* o, f3_t y );
  #define TYPEOF_badapt_activation_lgst_leaky_s 4195196768
  #define BETH_EXPAND_ITEM_badapt_activation_lgst_leaky_s \
    BCORE_DECLARE_OBJECT( badapt_activation_lgst_leaky_s ) \
      {aware_t _;}; \
    f3_t badapt_activation_lgst_leaky_s_fx( const badapt_activation_lgst_leaky_s* o, f3_t x ); \
    f3_t badapt_activation_lgst_leaky_s_dy( const badapt_activation_lgst_leaky_s* o, f3_t y );
  #define TYPEOF_badapt_activation_tanh_s 2100774626
  #define BETH_EXPAND_ITEM_badapt_activation_tanh_s \
    BCORE_DECLARE_OBJECT( badapt_activation_tanh_s ) \
      {aware_t _;}; \
    f3_t badapt_activation_tanh_s_fx( const badapt_activation_tanh_s* o, f3_t x ); \
    f3_t badapt_activation_tanh_s_dy( const badapt_activation_tanh_s* o, f3_t y );
  #define TYPEOF_badapt_activation_tanh_hard_s 873661470
  #define BETH_EXPAND_ITEM_badapt_activation_tanh_hard_s \
    BCORE_DECLARE_OBJECT( badapt_activation_tanh_hard_s ) \
      {aware_t _;}; \
    f3_t badapt_activation_tanh_hard_s_fx( const badapt_activation_tanh_hard_s* o, f3_t x ); \
    f3_t badapt_activation_tanh_hard_s_dy( const badapt_activation_tanh_hard_s* o, f3_t y );
  #define TYPEOF_badapt_activation_tanh_leaky_s 2702577623
  #define BETH_EXPAND_ITEM_badapt_activation_tanh_leaky_s \
    BCORE_DECLARE_OBJECT( badapt_activation_tanh_leaky_s ) \
      {aware_t _;}; \
    f3_t badapt_activation_tanh_leaky_s_fx( const badapt_activation_tanh_leaky_s* o, f3_t x ); \
    f3_t badapt_activation_tanh_leaky_s_dy( const badapt_activation_tanh_leaky_s* o, f3_t y );
  #define TYPEOF_badapt_activation_softplus_s 3728332191
  #define BETH_EXPAND_ITEM_badapt_activation_softplus_s \
    BCORE_DECLARE_OBJECT( badapt_activation_softplus_s ) \
      {aware_t _;}; \
    f3_t badapt_activation_softplus_s_fx( const badapt_activation_softplus_s* o, f3_t x ); \
    f3_t badapt_activation_softplus_s_dy( const badapt_activation_softplus_s* o, f3_t y );
  #define TYPEOF_badapt_activation_relu_s 708121501
  #define BETH_EXPAND_ITEM_badapt_activation_relu_s \
    BCORE_DECLARE_OBJECT( badapt_activation_relu_s ) \
      {aware_t _;}; \
    f3_t badapt_activation_relu_s_fx( const badapt_activation_relu_s* o, f3_t x ); \
    f3_t badapt_activation_relu_s_dy( const badapt_activation_relu_s* o, f3_t y );
  #define TYPEOF_badapt_activation_leaky_relu_s 841402970
  #define BETH_EXPAND_ITEM_badapt_activation_leaky_relu_s \
    BCORE_DECLARE_OBJECT( badapt_activation_leaky_relu_s ) \
      {aware_t _;}; \
    f3_t badapt_activation_leaky_relu_s_fx( const badapt_activation_leaky_relu_s* o, f3_t x ); \
    f3_t badapt_activation_leaky_relu_s_dy( const badapt_activation_leaky_relu_s* o, f3_t y );
#define BETH_EXPAND_GROUP_badapt_activation \
  BCORE_FORWARD_OBJECT( badapt_activation ); \
  typedef f3_t (*badapt_activation_fx)( const badapt_activation* o, f3_t x ); \
  typedef f3_t (*badapt_activation_dy)( const badapt_activation* o, f3_t y ); \
  BCORE_DECLARE_SPECT( badapt_activation ) \
  { \
      bcore_spect_header_s header; \
      badapt_activation_fx fx; \
      badapt_activation_dy dy; \
  }; \
  static inline badapt_activation* badapt_activation_t_create( tp_t t ) { bcore_trait_assert_satisfied_type( TYPEOF_badapt_activation, t ); return ( badapt_activation* )bcore_inst_t_create( t ); } \
  static inline badapt_activation* badapt_activation_a_clone( const badapt_activation* o ) { return ( badapt_activation* )bcore_inst_a_clone( ( bcore_inst* )o ); } \
  static inline void badapt_activation_a_discard( badapt_activation* o ) { bcore_inst_a_discard( ( bcore_inst* )o ); } \
  static inline void badapt_activation_a_replicate( badapt_activation** o, const badapt_activation* src ) { bcore_inst_a_replicate( ( bcore_inst** )o, ( bcore_inst* )src ); } \
  static inline f3_t badapt_activation_p_fx( const badapt_activation_s* __p, const badapt_activation* o, f3_t x ) { return __p->fx( o, x ); } \
  static inline f3_t badapt_activation_a_fx( const badapt_activation* o, f3_t x ) { return badapt_activation_s_get_aware( o )->fx( o, x ); } \
  static inline bl_t badapt_activation_p_defines_fx( const badapt_activation_s* __p ) { return true; } \
  static inline bl_t badapt_activation_a_defines_fx( const badapt_activation* o ) { return true; } \
  static inline f3_t badapt_activation_p_dy( const badapt_activation_s* __p, const badapt_activation* o, f3_t y ) { return __p->dy( o, y ); } \
  static inline f3_t badapt_activation_a_dy( const badapt_activation* o, f3_t y ) { return badapt_activation_s_get_aware( o )->dy( o, y ); } \
  static inline bl_t badapt_activation_p_defines_dy( const badapt_activation_s* __p ) { return true; } \
  static inline bl_t badapt_activation_a_defines_dy( const badapt_activation* o ) { return true; } \
  BETH_EXPAND_ITEM_badapt_activation_lgst_s \
  BETH_EXPAND_ITEM_badapt_activation_lgst_hard_s \
  BETH_EXPAND_ITEM_badapt_activation_lgst_leaky_s \
  BETH_EXPAND_ITEM_badapt_activation_tanh_s \
  BETH_EXPAND_ITEM_badapt_activation_tanh_hard_s \
  BETH_EXPAND_ITEM_badapt_activation_tanh_leaky_s \
  BETH_EXPAND_ITEM_badapt_activation_softplus_s \
  BETH_EXPAND_ITEM_badapt_activation_relu_s \
  BETH_EXPAND_ITEM_badapt_activation_leaky_relu_s

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_activator

#define TYPEOF_badapt_activator 1765962851
#define TYPEOF_badapt_activator_s 991795461
  #define TYPEOF_badapt_activator_plain_s 3369734202
  #define BETH_EXPAND_ITEM_badapt_activator_plain_s \
    BCORE_DECLARE_OBJECT( badapt_activator_plain_s ) \
      {aware_t _;badapt_activation* activation;}; \
    void badapt_activator_plain_s_setup( badapt_activator_plain_s* o ); \
    void badapt_activator_plain_s_reset( badapt_activator_plain_s* o ); \
    void badapt_activator_plain_s_infer( const badapt_activator_plain_s* o, const bmath_vf3_s* in, bmath_vf3_s* out ); \
    void badapt_activator_plain_s_bgrad( const badapt_activator_plain_s* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out, const bmath_vf3_s* out ); \
    void badapt_activator_plain_s_adapt( badapt_activator_plain_s* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out, const bmath_vf3_s* out, f3_t epsilon ); \
    void badapt_activator_plain_s_adapt_defer( badapt_activator_plain_s* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out, const bmath_vf3_s* out ); \
    void badapt_activator_plain_s_adapt_apply( badapt_activator_plain_s* o, f3_t epsilon ); \
    void badapt_activator_plain_s_set_activation( badapt_activator_plain_s* o, const badapt_activation* activation ); \
    const badapt_activation* badapt_activator_plain_s_get_activation( const badapt_activator_plain_s* o );
  #define TYPEOF_badapt_activator_bias_s 4133517011
  #define BETH_EXPAND_ITEM_badapt_activator_bias_s \
    BCORE_DECLARE_OBJECT( badapt_activator_bias_s ) \
      {aware_t _;badapt_activation* activation;bmath_vf3_s v_bias;bmath_vf3_s v_bias_deferred;}; \
    void badapt_activator_bias_s_setup( badapt_activator_bias_s* o ); \
    void badapt_activator_bias_s_reset( badapt_activator_bias_s* o ); \
    void badapt_activator_bias_s_infer( const badapt_activator_bias_s* o, const bmath_vf3_s* in, bmath_vf3_s* out ); \
    void badapt_activator_bias_s_bgrad( const badapt_activator_bias_s* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out, const bmath_vf3_s* out ); \
    void badapt_activator_bias_s_adapt( badapt_activator_bias_s* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out, const bmath_vf3_s* out, f3_t epsilon ); \
    void badapt_activator_bias_s_adapt_defer( badapt_activator_bias_s* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out, const bmath_vf3_s* out ); \
    void badapt_activator_bias_s_adapt_apply( badapt_activator_bias_s* o, f3_t epsilon ); \
    void badapt_activator_bias_s_set_activation( badapt_activator_bias_s* o, const badapt_activation* activation ); \
    const badapt_activation* badapt_activator_bias_s_get_activation( const badapt_activator_bias_s* o );
  #define TYPEOF_badapt_layer_activator_s 4048593039
  #define BETH_EXPAND_ITEM_badapt_layer_activator_s \
    BCORE_DECLARE_OBJECT( badapt_layer_activator_s ) \
      {aware_t _;sz_t layer;badapt_activator* activator;};
  #define TYPEOF_badapt_arr_layer_activator_s 1342407707
  #define BETH_EXPAND_ITEM_badapt_arr_layer_activator_s \
    BCORE_DECLARE_OBJECT( badapt_arr_layer_activator_s ) \
      {aware_t _;BCORE_ARRAY_DYN_SOLID_STATIC_S( badapt_layer_activator_s, arr_ );}; \
    static inline void badapt_arr_layer_activator_s_set_space( badapt_arr_layer_activator_s* o, sz_t size ) { bcore_array_t_set_space( TYPEOF_badapt_arr_layer_activator_s, ( bcore_array* )o, size ); } \
    static inline void badapt_arr_layer_activator_s_set_size( badapt_arr_layer_activator_s* o, sz_t size ) { bcore_array_t_set_size( TYPEOF_badapt_arr_layer_activator_s, ( bcore_array* )o, size ); } \
    static inline void badapt_arr_layer_activator_s_clear( badapt_arr_layer_activator_s* o ) { bcore_array_t_set_space( TYPEOF_badapt_arr_layer_activator_s, ( bcore_array* )o, 0 ); } \
    static inline void badapt_arr_layer_activator_s_push_c( badapt_arr_layer_activator_s* o, const badapt_layer_activator_s* v ) { bcore_array_t_push( TYPEOF_badapt_arr_layer_activator_s, ( bcore_array* )o, sr_twc( TYPEOF_badapt_layer_activator_s, v ) ); } \
    static inline void badapt_arr_layer_activator_s_push_d( badapt_arr_layer_activator_s* o,       badapt_layer_activator_s* v ) { bcore_array_t_push( TYPEOF_badapt_arr_layer_activator_s, ( bcore_array* )o, sr_tsd( TYPEOF_badapt_layer_activator_s, v ) ); } \
    static inline badapt_layer_activator_s* badapt_arr_layer_activator_s_push( badapt_arr_layer_activator_s* o ) \
    { \
        bcore_array_t_push( TYPEOF_badapt_arr_layer_activator_s, ( bcore_array* )o, sr_null() ); \
        return bcore_array_t_get_last( TYPEOF_badapt_arr_layer_activator_s, ( bcore_array* )o ).o; \
    }
  #define TYPEOF_badapt_arr_activator_s 3921137337
  #define BETH_EXPAND_ITEM_badapt_arr_activator_s \
    BCORE_DECLARE_OBJECT( badapt_arr_activator_s ) \
      {aware_t _;BCORE_ARRAY_DYN_LINK_STATIC_S( badapt_activator, arr_ );}; \
    static inline void badapt_arr_activator_s_set_space( badapt_arr_activator_s* o, sz_t size ) { bcore_array_t_set_space( TYPEOF_badapt_arr_activator_s, ( bcore_array* )o, size ); } \
    static inline void badapt_arr_activator_s_set_size( badapt_arr_activator_s* o, sz_t size ) { bcore_array_t_set_size( TYPEOF_badapt_arr_activator_s, ( bcore_array* )o, size ); } \
    static inline void badapt_arr_activator_s_clear( badapt_arr_activator_s* o ) { bcore_array_t_set_space( TYPEOF_badapt_arr_activator_s, ( bcore_array* )o, 0 ); } \
    static inline void badapt_arr_activator_s_push_c( badapt_arr_activator_s* o, const badapt_activator* v ) { bcore_array_t_push( TYPEOF_badapt_arr_activator_s, ( bcore_array* )o, sr_awc( v ) ); } \
    static inline void badapt_arr_activator_s_push_d( badapt_arr_activator_s* o,       badapt_activator* v ) { bcore_array_t_push( TYPEOF_badapt_arr_activator_s, ( bcore_array* )o, sr_asd( v ) ); } \
    static inline badapt_activator* badapt_arr_activator_s_push_t( badapt_arr_activator_s* o, tp_t t ) \
    { \
        bcore_trait_assert_satisfied_type( TYPEOF_badapt_activator, t ); \
        bcore_array_t_push( TYPEOF_badapt_arr_activator_s, ( bcore_array* )o, sr_t_create( t ) ); \
        return bcore_array_t_get_last( TYPEOF_badapt_arr_activator_s, ( bcore_array* )o ).o; \
    }
#define BETH_EXPAND_GROUP_badapt_activator \
  BCORE_FORWARD_OBJECT( badapt_activator ); \
  typedef void (*badapt_activator_reset)( badapt_activator* o ); \
  typedef void (*badapt_activator_setup)( badapt_activator* o ); \
  typedef sz_t (*badapt_activator_get_size)( const badapt_activator* o ); \
  typedef void (*badapt_activator_set_size)( badapt_activator* o, sz_t size ); \
  typedef const badapt_activation* (*badapt_activator_get_activation)( const badapt_activator* o ); \
  typedef void (*badapt_activator_set_activation)( badapt_activator* o, const badapt_activation* activation ); \
  typedef void (*badapt_activator_infer)( const badapt_activator* o, const bmath_vf3_s* in, bmath_vf3_s* out ); \
  typedef void (*badapt_activator_bgrad)( const badapt_activator* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out, const bmath_vf3_s* out ); \
  typedef void (*badapt_activator_adapt)( badapt_activator* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out, const bmath_vf3_s* out, f3_t epsilon ); \
  typedef void (*badapt_activator_adapt_defer)( badapt_activator* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out, const bmath_vf3_s* out ); \
  typedef void (*badapt_activator_adapt_apply)( badapt_activator* o, f3_t epsilon ); \
  BCORE_DECLARE_SPECT( badapt_activator ) \
  { \
      bcore_spect_header_s header; \
      badapt_activator_reset reset; \
      badapt_activator_setup setup; \
      badapt_activator_get_size get_size; \
      badapt_activator_set_size set_size; \
      badapt_activator_get_activation get_activation; \
      badapt_activator_set_activation set_activation; \
      badapt_activator_infer infer; \
      badapt_activator_bgrad bgrad; \
      badapt_activator_adapt adapt; \
      badapt_activator_adapt_defer adapt_defer; \
      badapt_activator_adapt_apply adapt_apply; \
  }; \
  static inline badapt_activator* badapt_activator_t_create( tp_t t ) { bcore_trait_assert_satisfied_type( TYPEOF_badapt_activator, t ); return ( badapt_activator* )bcore_inst_t_create( t ); } \
  static inline badapt_activator* badapt_activator_a_clone( const badapt_activator* o ) { return ( badapt_activator* )bcore_inst_a_clone( ( bcore_inst* )o ); } \
  static inline void badapt_activator_a_discard( badapt_activator* o ) { bcore_inst_a_discard( ( bcore_inst* )o ); } \
  static inline void badapt_activator_a_replicate( badapt_activator** o, const badapt_activator* src ) { bcore_inst_a_replicate( ( bcore_inst** )o, ( bcore_inst* )src ); } \
  static inline void badapt_activator_a_reset( badapt_activator* o ) { badapt_activator_s_get_aware( o )->reset( o ); } \
  static inline bl_t badapt_activator_a_defines_reset( const badapt_activator* o ) { return true; } \
  static inline void badapt_activator_a_setup( badapt_activator* o ) { badapt_activator_s_get_aware( o )->setup( o ); } \
  static inline bl_t badapt_activator_a_defines_setup( const badapt_activator* o ) { return true; } \
  static inline sz_t badapt_activator_a_get_size( const badapt_activator* o ) { return badapt_activator_s_get_aware( o )->get_size( o ); } \
  static inline bl_t badapt_activator_a_defines_get_size( const badapt_activator* o ) { return badapt_activator_s_get_aware( o )->get_size != NULL; } \
  static inline void badapt_activator_a_set_size( badapt_activator* o, sz_t size ) { badapt_activator_s_get_aware( o )->set_size( o, size ); } \
  static inline bl_t badapt_activator_a_defines_set_size( const badapt_activator* o ) { return badapt_activator_s_get_aware( o )->set_size != NULL; } \
  static inline const badapt_activation* badapt_activator_a_get_activation( const badapt_activator* o ) { return badapt_activator_s_get_aware( o )->get_activation( o ); } \
  static inline bl_t badapt_activator_a_defines_get_activation( const badapt_activator* o ) { return badapt_activator_s_get_aware( o )->get_activation != NULL; } \
  static inline void badapt_activator_a_set_activation( badapt_activator* o, const badapt_activation* activation ) { badapt_activator_s_get_aware( o )->set_activation( o, activation ); } \
  static inline bl_t badapt_activator_a_defines_set_activation( const badapt_activator* o ) { return badapt_activator_s_get_aware( o )->set_activation != NULL; } \
  static inline void badapt_activator_a_infer( const badapt_activator* o, const bmath_vf3_s* in, bmath_vf3_s* out ) { badapt_activator_s_get_aware( o )->infer( o, in, out ); } \
  static inline bl_t badapt_activator_a_defines_infer( const badapt_activator* o ) { return true; } \
  static inline void badapt_activator_a_bgrad( const badapt_activator* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out, const bmath_vf3_s* out ) { badapt_activator_s_get_aware( o )->bgrad( o, grad_in, grad_out, out ); } \
  static inline bl_t badapt_activator_a_defines_bgrad( const badapt_activator* o ) { return true; } \
  static inline void badapt_activator_a_adapt( badapt_activator* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out, const bmath_vf3_s* out, f3_t epsilon ) { badapt_activator_s_get_aware( o )->adapt( o, grad_in, grad_out, out, epsilon ); } \
  static inline bl_t badapt_activator_a_defines_adapt( const badapt_activator* o ) { return true; } \
  static inline void badapt_activator_a_adapt_defer( badapt_activator* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out, const bmath_vf3_s* out ) { badapt_activator_s_get_aware( o )->adapt_defer( o, grad_in, grad_out, out ); } \
  static inline bl_t badapt_activator_a_defines_adapt_defer( const badapt_activator* o ) { return badapt_activator_s_get_aware( o )->adapt_defer != NULL; } \
  static inline void badapt_activator_a_adapt_apply( badapt_activator* o, f3_t epsilon ) { badapt_activator_s_get_aware( o )->adapt_apply( o, epsilon ); } \
  static inline bl_t badapt_activator_a_defines_adapt_apply( const badapt_activator* o ) { return badapt_activator_s_get_aware( o )->adapt_apply != NULL; } \
  BETH_EXPAND_ITEM_badapt_activator_plain_s \
  BETH_EXPAND_ITEM_badapt_activator_bias_s \
  BETH_EXPAND_ITEM_badapt_layer_activator_s \
  BETH_EXPAND_ITEM_badapt_arr_layer_activator_s \
  BETH_EXPAND_ITEM_badapt_arr_activator_s

/**********************************************************************************************************************/
// source: badapt_loss

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_loss

#define TYPEOF_badapt_loss 2315142799
#define TYPEOF_badapt_loss_s 3349774265
  #define TYPEOF_badapt_loss_l2_s 537646796
  #define BETH_EXPAND_ITEM_badapt_loss_l2_s \
    BCORE_DECLARE_OBJECT( badapt_loss_l2_s ) \
      {aware_t _;}; \
    f3_t badapt_loss_l2_s_loss( const badapt_loss_l2_s* o, const bmath_vf3_s* out, const bmath_vf3_s* target ); \
    f3_t badapt_loss_l2_s_loss_f3( const badapt_loss_l2_s* o, f3_t out, f3_t target ); \
    void badapt_loss_l2_s_bgrad( const badapt_loss_l2_s* o, const bmath_vf3_s* out, const bmath_vf3_s* target, bmath_vf3_s* grad );
#define BETH_EXPAND_GROUP_badapt_loss \
  BCORE_FORWARD_OBJECT( badapt_loss ); \
  typedef f3_t (*badapt_loss_loss)( const badapt_loss* o, const bmath_vf3_s* out, const bmath_vf3_s* target ); \
  typedef f3_t (*badapt_loss_loss_f3)( const badapt_loss* o, f3_t out, f3_t target ); \
  typedef void (*badapt_loss_bgrad)( const badapt_loss* o, const bmath_vf3_s* out, const bmath_vf3_s* target, bmath_vf3_s* grad ); \
  BCORE_DECLARE_SPECT( badapt_loss ) \
  { \
      bcore_spect_header_s header; \
      badapt_loss_loss loss; \
      badapt_loss_loss_f3 loss_f3; \
      badapt_loss_bgrad bgrad; \
  }; \
  static inline badapt_loss* badapt_loss_t_create( tp_t t ) { bcore_trait_assert_satisfied_type( TYPEOF_badapt_loss, t ); return ( badapt_loss* )bcore_inst_t_create( t ); } \
  static inline badapt_loss* badapt_loss_a_clone( const badapt_loss* o ) { return ( badapt_loss* )bcore_inst_a_clone( ( bcore_inst* )o ); } \
  static inline void badapt_loss_a_discard( badapt_loss* o ) { bcore_inst_a_discard( ( bcore_inst* )o ); } \
  static inline void badapt_loss_a_replicate( badapt_loss** o, const badapt_loss* src ) { bcore_inst_a_replicate( ( bcore_inst** )o, ( bcore_inst* )src ); } \
  static inline f3_t badapt_loss_p_loss( const badapt_loss_s* __p, const badapt_loss* o, const bmath_vf3_s* out, const bmath_vf3_s* target ) { return __p->loss( o, out, target ); } \
  static inline f3_t badapt_loss_a_loss( const badapt_loss* o, const bmath_vf3_s* out, const bmath_vf3_s* target ) { return badapt_loss_s_get_aware( o )->loss( o, out, target ); } \
  static inline bl_t badapt_loss_p_defines_loss( const badapt_loss_s* __p ) { return true; } \
  static inline bl_t badapt_loss_a_defines_loss( const badapt_loss* o ) { return true; } \
  static inline f3_t badapt_loss_p_loss_f3( const badapt_loss_s* __p, const badapt_loss* o, f3_t out, f3_t target ) { return __p->loss_f3( o, out, target ); } \
  static inline f3_t badapt_loss_a_loss_f3( const badapt_loss* o, f3_t out, f3_t target ) { return badapt_loss_s_get_aware( o )->loss_f3( o, out, target ); } \
  static inline bl_t badapt_loss_p_defines_loss_f3( const badapt_loss_s* __p ) { return true; } \
  static inline bl_t badapt_loss_a_defines_loss_f3( const badapt_loss* o ) { return true; } \
  static inline void badapt_loss_p_bgrad( const badapt_loss_s* __p, const badapt_loss* o, const bmath_vf3_s* out, const bmath_vf3_s* target, bmath_vf3_s* grad ) { __p->bgrad( o, out, target, grad ); } \
  static inline void badapt_loss_a_bgrad( const badapt_loss* o, const bmath_vf3_s* out, const bmath_vf3_s* target, bmath_vf3_s* grad ) { badapt_loss_s_get_aware( o )->bgrad( o, out, target, grad ); } \
  static inline bl_t badapt_loss_p_defines_bgrad( const badapt_loss_s* __p ) { return true; } \
  static inline bl_t badapt_loss_a_defines_bgrad( const badapt_loss* o ) { return true; } \
  BETH_EXPAND_ITEM_badapt_loss_l2_s

/**********************************************************************************************************************/
// source: badapt_mlp

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_mlp

#define TYPEOF_badapt_mlp 498425923
  #define TYPEOF_badapt_mlp_layer_s 189394571
  #define BETH_EXPAND_ITEM_badapt_mlp_layer_s \
    BCORE_DECLARE_OBJECT( badapt_mlp_layer_s ) \
      {aware_t _;sz_t input_size;sz_t kernels;bmath_mf3_s wgt;badapt_activator* act;bmath_vf3_s out;};
  #define TYPEOF_badapt_mlp_arr_layer_s 2923615799
  #define BETH_EXPAND_ITEM_badapt_mlp_arr_layer_s \
    BCORE_DECLARE_OBJECT( badapt_mlp_arr_layer_s ) \
      {aware_t _;BCORE_ARRAY_DYN_SOLID_STATIC_S( badapt_mlp_layer_s, arr_ );}; \
    static inline void badapt_mlp_arr_layer_s_set_space( badapt_mlp_arr_layer_s* o, sz_t size ) { bcore_array_t_set_space( TYPEOF_badapt_mlp_arr_layer_s, ( bcore_array* )o, size ); } \
    static inline void badapt_mlp_arr_layer_s_set_size( badapt_mlp_arr_layer_s* o, sz_t size ) { bcore_array_t_set_size( TYPEOF_badapt_mlp_arr_layer_s, ( bcore_array* )o, size ); } \
    static inline void badapt_mlp_arr_layer_s_clear( badapt_mlp_arr_layer_s* o ) { bcore_array_t_set_space( TYPEOF_badapt_mlp_arr_layer_s, ( bcore_array* )o, 0 ); } \
    static inline void badapt_mlp_arr_layer_s_push_c( badapt_mlp_arr_layer_s* o, const badapt_mlp_layer_s* v ) { bcore_array_t_push( TYPEOF_badapt_mlp_arr_layer_s, ( bcore_array* )o, sr_twc( TYPEOF_badapt_mlp_layer_s, v ) ); } \
    static inline void badapt_mlp_arr_layer_s_push_d( badapt_mlp_arr_layer_s* o,       badapt_mlp_layer_s* v ) { bcore_array_t_push( TYPEOF_badapt_mlp_arr_layer_s, ( bcore_array* )o, sr_tsd( TYPEOF_badapt_mlp_layer_s, v ) ); } \
    static inline badapt_mlp_layer_s* badapt_mlp_arr_layer_s_push( badapt_mlp_arr_layer_s* o ) \
    { \
        bcore_array_t_push( TYPEOF_badapt_mlp_arr_layer_s, ( bcore_array* )o, sr_null() ); \
        return bcore_array_t_get_last( TYPEOF_badapt_mlp_arr_layer_s, ( bcore_array* )o ).o; \
    }
  #define TYPEOF_badapt_mlp_s 3664397861
  #define BETH_EXPAND_ITEM_badapt_mlp_s \
    BCORE_DECLARE_OBJECT( badapt_mlp_s ) \
      {aware_t _;badapt_dynamics_std_s dynamics;badapt_mlp_arr_layer_s arr_layer;sz_t max_buffer_size;bmath_vf3_s in;}; \
    sz_t badapt_mlp_s_get_in_size( const badapt_mlp_s* o ); \
    sz_t badapt_mlp_s_get_out_size( const badapt_mlp_s* o ); \
    void badapt_mlp_s_get_dynamics_std( const badapt_mlp_s* o, badapt_dynamics_std_s* dynamics ); \
    void badapt_mlp_s_set_dynamics_std( badapt_mlp_s* o, const badapt_dynamics_std_s* dynamics ); \
    void badapt_mlp_s_arc_to_sink( const badapt_mlp_s* o, bcore_sink* sink ); \
    void badapt_mlp_s_infer( const badapt_mlp_s* o, const bmath_vf3_s* in, bmath_vf3_s* out ); \
    void badapt_mlp_s_minfer( badapt_mlp_s* o, const bmath_vf3_s* in, bmath_vf3_s* out ); \
    void badapt_mlp_s_bgrad( const badapt_mlp_s* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out ); \
    void badapt_mlp_s_bgrad_adapt( badapt_mlp_s* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out );
  #define TYPEOF_badapt_builder_mlp_funnel_s 3643146818
  #define BETH_EXPAND_ITEM_badapt_builder_mlp_funnel_s \
    BCORE_DECLARE_OBJECT( badapt_builder_mlp_funnel_s ) \
      {aware_t _;sz_t input_size;sz_t input_kernels;sz_t output_kernels;sz_t layers;f3_t kernels_rate;u2_t random_seed;badapt_dynamics_std_s dynamics;badapt_arr_layer_activator_s arr_layer_activator;}; \
    sz_t badapt_builder_mlp_funnel_s_get_in_size( const badapt_builder_mlp_funnel_s* o ); \
    void badapt_builder_mlp_funnel_s_set_in_size( badapt_builder_mlp_funnel_s* o, sz_t size ); \
    sz_t badapt_builder_mlp_funnel_s_get_out_size( const badapt_builder_mlp_funnel_s* o ); \
    void badapt_builder_mlp_funnel_s_set_out_size( badapt_builder_mlp_funnel_s* o, sz_t size ); \
    badapt_adaptive* badapt_builder_mlp_funnel_s_build( const badapt_builder_mlp_funnel_s* o );
#define BETH_EXPAND_GROUP_badapt_mlp \
  BETH_EXPAND_ITEM_badapt_mlp_layer_s \
  BETH_EXPAND_ITEM_badapt_mlp_arr_layer_s \
  BETH_EXPAND_ITEM_badapt_mlp_s \
  BETH_EXPAND_ITEM_badapt_builder_mlp_funnel_s

/**********************************************************************************************************************/
// source: badapt_c1d

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_c1d

#define TYPEOF_badapt_c1d 4280081428
  #define TYPEOF_badapt_c1d_layer_s 169352500
  #define BETH_EXPAND_ITEM_badapt_c1d_layer_s \
    BCORE_DECLARE_OBJECT( badapt_c1d_layer_s ) \
      {aware_t _;sz_t input_size;sz_t stride;sz_t steps;sz_t kernel_size;sz_t kernels;bmath_mf3_s wgt;badapt_activator* act;bmath_vf3_s out;};
  #define TYPEOF_badapt_c1d_arr_layer_s 2858590876
  #define BETH_EXPAND_ITEM_badapt_c1d_arr_layer_s \
    BCORE_DECLARE_OBJECT( badapt_c1d_arr_layer_s ) \
      {aware_t _;BCORE_ARRAY_DYN_SOLID_STATIC_S( badapt_c1d_layer_s, arr_ );}; \
    static inline void badapt_c1d_arr_layer_s_set_space( badapt_c1d_arr_layer_s* o, sz_t size ) { bcore_array_t_set_space( TYPEOF_badapt_c1d_arr_layer_s, ( bcore_array* )o, size ); } \
    static inline void badapt_c1d_arr_layer_s_set_size( badapt_c1d_arr_layer_s* o, sz_t size ) { bcore_array_t_set_size( TYPEOF_badapt_c1d_arr_layer_s, ( bcore_array* )o, size ); } \
    static inline void badapt_c1d_arr_layer_s_clear( badapt_c1d_arr_layer_s* o ) { bcore_array_t_set_space( TYPEOF_badapt_c1d_arr_layer_s, ( bcore_array* )o, 0 ); } \
    static inline void badapt_c1d_arr_layer_s_push_c( badapt_c1d_arr_layer_s* o, const badapt_c1d_layer_s* v ) { bcore_array_t_push( TYPEOF_badapt_c1d_arr_layer_s, ( bcore_array* )o, sr_twc( TYPEOF_badapt_c1d_layer_s, v ) ); } \
    static inline void badapt_c1d_arr_layer_s_push_d( badapt_c1d_arr_layer_s* o,       badapt_c1d_layer_s* v ) { bcore_array_t_push( TYPEOF_badapt_c1d_arr_layer_s, ( bcore_array* )o, sr_tsd( TYPEOF_badapt_c1d_layer_s, v ) ); } \
    static inline badapt_c1d_layer_s* badapt_c1d_arr_layer_s_push( badapt_c1d_arr_layer_s* o ) \
    { \
        bcore_array_t_push( TYPEOF_badapt_c1d_arr_layer_s, ( bcore_array* )o, sr_null() ); \
        return bcore_array_t_get_last( TYPEOF_badapt_c1d_arr_layer_s, ( bcore_array* )o ).o; \
    }
  #define TYPEOF_badapt_c1d_s 2405996614
  #define BETH_EXPAND_ITEM_badapt_c1d_s \
    BCORE_DECLARE_OBJECT( badapt_c1d_s ) \
      {aware_t _;badapt_dynamics_std_s dynamics;badapt_c1d_arr_layer_s arr_layer;sz_t max_buffer_size;bmath_vf3_s in;}; \
    sz_t badapt_c1d_s_get_in_size( const badapt_c1d_s* o ); \
    sz_t badapt_c1d_s_get_out_size( const badapt_c1d_s* o ); \
    void badapt_c1d_s_get_dynamics_std( const badapt_c1d_s* o, badapt_dynamics_std_s* dynamics ); \
    void badapt_c1d_s_set_dynamics_std( badapt_c1d_s* o, const badapt_dynamics_std_s* dynamics ); \
    void badapt_c1d_s_arc_to_sink( const badapt_c1d_s* o, bcore_sink* sink ); \
    void badapt_c1d_s_infer( const badapt_c1d_s* o, const bmath_vf3_s* in, bmath_vf3_s* out ); \
    void badapt_c1d_s_minfer( badapt_c1d_s* o, const bmath_vf3_s* in, bmath_vf3_s* out ); \
    void badapt_c1d_s_bgrad( const badapt_c1d_s* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out ); \
    void badapt_c1d_s_bgrad_adapt( badapt_c1d_s* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out );
  #define TYPEOF_badapt_builder_c1d_funnel_s 437767695
  #define BETH_EXPAND_ITEM_badapt_builder_c1d_funnel_s \
    BCORE_DECLARE_OBJECT( badapt_builder_c1d_funnel_s ) \
      {aware_t _;sz_t input_size;sz_t input_step;sz_t input_convolution_size;sz_t input_kernels;sz_t output_kernels;f3_t kernels_rate;sz_t reduction_step;sz_t convolution_size;u2_t random_seed;badapt_dynamics_std_s dynamics;badapt_arr_layer_activator_s arr_layer_activator;}; \
    sz_t badapt_builder_c1d_funnel_s_get_in_size( const badapt_builder_c1d_funnel_s* o ); \
    void badapt_builder_c1d_funnel_s_set_in_size( badapt_builder_c1d_funnel_s* o, sz_t size ); \
    sz_t badapt_builder_c1d_funnel_s_get_out_size( const badapt_builder_c1d_funnel_s* o ); \
    void badapt_builder_c1d_funnel_s_set_out_size( badapt_builder_c1d_funnel_s* o, sz_t size ); \
    badapt_adaptive* badapt_builder_c1d_funnel_s_build( const badapt_builder_c1d_funnel_s* o );
#define BETH_EXPAND_GROUP_badapt_c1d \
  BETH_EXPAND_ITEM_badapt_c1d_layer_s \
  BETH_EXPAND_ITEM_badapt_c1d_arr_layer_s \
  BETH_EXPAND_ITEM_badapt_c1d_s \
  BETH_EXPAND_ITEM_badapt_builder_c1d_funnel_s

/**********************************************************************************************************************/
// source: badapt_ern

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_ern

#define TYPEOF_badapt_ern 3572010651
  #define TYPEOF_badapt_ern_layer_s 879149859
  #define BETH_EXPAND_ITEM_badapt_ern_layer_s \
    BCORE_DECLARE_OBJECT( badapt_ern_layer_s ) \
      {bmath_vf3_s v_x;bmath_vf3_s v_c;bmath_vf3_s v_h;};
  #define TYPEOF_badapt_ern_arr_layer_s 3542192735
  #define BETH_EXPAND_ITEM_badapt_ern_arr_layer_s \
    BCORE_DECLARE_OBJECT( badapt_ern_arr_layer_s ) \
      {aware_t _;BCORE_ARRAY_DYN_LINK_STATIC_S( badapt_ern_layer_s, arr_ );}; \
    static inline void badapt_ern_arr_layer_s_set_space( badapt_ern_arr_layer_s* o, sz_t size ) { bcore_array_t_set_space( TYPEOF_badapt_ern_arr_layer_s, ( bcore_array* )o, size ); } \
    static inline void badapt_ern_arr_layer_s_set_size( badapt_ern_arr_layer_s* o, sz_t size ) { bcore_array_t_set_size( TYPEOF_badapt_ern_arr_layer_s, ( bcore_array* )o, size ); } \
    static inline void badapt_ern_arr_layer_s_clear( badapt_ern_arr_layer_s* o ) { bcore_array_t_set_space( TYPEOF_badapt_ern_arr_layer_s, ( bcore_array* )o, 0 ); } \
    static inline void badapt_ern_arr_layer_s_push_c( badapt_ern_arr_layer_s* o, const badapt_ern_layer_s* v ) { bcore_array_t_push( TYPEOF_badapt_ern_arr_layer_s, ( bcore_array* )o, sr_twc( TYPEOF_badapt_ern_layer_s, v ) ); } \
    static inline void badapt_ern_arr_layer_s_push_d( badapt_ern_arr_layer_s* o,       badapt_ern_layer_s* v ) { bcore_array_t_push( TYPEOF_badapt_ern_arr_layer_s, ( bcore_array* )o, sr_tsd( TYPEOF_badapt_ern_layer_s, v ) ); } \
    static inline badapt_ern_layer_s* badapt_ern_arr_layer_s_push( badapt_ern_arr_layer_s* o ) \
    { \
        bcore_array_t_push( TYPEOF_badapt_ern_arr_layer_s, ( bcore_array* )o, sr_t_create( TYPEOF_badapt_ern_layer_s ) ); \
        return bcore_array_t_get_last( TYPEOF_badapt_ern_arr_layer_s, ( bcore_array* )o ).o; \
    }
  #define TYPEOF_badapt_ern_s 3488918381
  #define BETH_EXPAND_ITEM_badapt_ern_s \
    BCORE_DECLARE_OBJECT( badapt_ern_s ) \
      {aware_t _;sz_t size_input;sz_t size_hidden;sz_t size_output;sz_t size_unfolded;badapt_dynamics_std_s dynamics;bmath_mf3_s w_hx;bmath_mf3_s w_hc;bmath_mf3_s w_o;badapt_activator* a_h;badapt_activator* a_o;bmath_vf3_s v_o;bmath_vf3_s v_go;bmath_vf3_s v_gc;bmath_vf3_s v_gh;bmath_mf3_s gw_hx;bmath_mf3_s gw_hc;badapt_ern_arr_layer_s arr_layer;}; \
    sz_t badapt_ern_s_get_in_size( const badapt_ern_s* o ); \
    sz_t badapt_ern_s_get_out_size( const badapt_ern_s* o ); \
    void badapt_ern_s_get_dynamics_std( const badapt_ern_s* o, badapt_dynamics_std_s* dynamics ); \
    void badapt_ern_s_set_dynamics_std( badapt_ern_s* o, const badapt_dynamics_std_s* dynamics ); \
    void badapt_ern_s_arc_to_sink( const badapt_ern_s* o, bcore_sink* sink ); \
    void badapt_ern_s_minfer( badapt_ern_s* o, const bmath_vf3_s* in, bmath_vf3_s* out ); \
    void badapt_ern_s_bgrad_adapt( badapt_ern_s* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out );
  #define TYPEOF_badapt_ern_builder_s 178034157
  #define BETH_EXPAND_ITEM_badapt_ern_builder_s \
    BCORE_DECLARE_OBJECT( badapt_ern_builder_s ) \
      {aware_t _;sz_t size_input;sz_t size_hidden;sz_t size_output;sz_t size_unfolded;badapt_dynamics_std_s dynamics;u2_t random_seed;badapt_activator* a_h;badapt_activator* a_o;}; \
    sz_t badapt_ern_builder_s_get_in_size( const badapt_ern_builder_s* o ); \
    void badapt_ern_builder_s_set_in_size( badapt_ern_builder_s* o, sz_t size ); \
    sz_t badapt_ern_builder_s_get_out_size( const badapt_ern_builder_s* o ); \
    void badapt_ern_builder_s_set_out_size( badapt_ern_builder_s* o, sz_t size ); \
    badapt_adaptive* badapt_ern_builder_s_build( const badapt_ern_builder_s* o );
#define BETH_EXPAND_GROUP_badapt_ern \
  BETH_EXPAND_ITEM_badapt_ern_layer_s \
  BETH_EXPAND_ITEM_badapt_ern_arr_layer_s \
  BETH_EXPAND_ITEM_badapt_ern_s \
  BETH_EXPAND_ITEM_badapt_ern_builder_s

/**********************************************************************************************************************/
// source: badapt_jrn

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_jrn

#define TYPEOF_badapt_jrn 3557364830
  #define TYPEOF_badapt_jrn_s 3863226272
  #define BETH_EXPAND_ITEM_badapt_jrn_s \
    BCORE_DECLARE_OBJECT( badapt_jrn_s ) \
      {aware_t _;sz_t size_input;sz_t size_output;badapt_dynamics_std_s dynamics;bmath_mf3_s wgt_input;bmath_mf3_s wgt_context;bmath_mf3_s wgt_hidden;f3_t context_epsilon_factor;badapt_activator* activator_hidden;badapt_activator* activator_output;bmath_vf3_s vec_input;bmath_vf3_s vec_context;bmath_vf3_s vec_hidden;bmath_vf3_s vec_output;}; \
    sz_t badapt_jrn_s_get_in_size( const badapt_jrn_s* o ); \
    sz_t badapt_jrn_s_get_out_size( const badapt_jrn_s* o ); \
    void badapt_jrn_s_get_dynamics_std( const badapt_jrn_s* o, badapt_dynamics_std_s* dynamics ); \
    void badapt_jrn_s_set_dynamics_std( badapt_jrn_s* o, const badapt_dynamics_std_s* dynamics ); \
    void badapt_jrn_s_arc_to_sink( const badapt_jrn_s* o, bcore_sink* sink ); \
    void badapt_jrn_s_minfer( badapt_jrn_s* o, const bmath_vf3_s* in, bmath_vf3_s* out ); \
    void badapt_jrn_s_bgrad( const badapt_jrn_s* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out ); \
    void badapt_jrn_s_bgrad_adapt( badapt_jrn_s* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out );
  #define TYPEOF_badapt_builder_jrn_s 1047382808
  #define BETH_EXPAND_ITEM_badapt_builder_jrn_s \
    BCORE_DECLARE_OBJECT( badapt_builder_jrn_s ) \
      {aware_t _;sz_t size_input;sz_t size_hidden;sz_t size_output;badapt_dynamics_std_s dynamics;f3_t context_epsilon_factor;u2_t random_seed;badapt_activator* activator_hidden;badapt_activator* activator_output;}; \
    sz_t badapt_builder_jrn_s_get_in_size( const badapt_builder_jrn_s* o ); \
    void badapt_builder_jrn_s_set_in_size( badapt_builder_jrn_s* o, sz_t size ); \
    sz_t badapt_builder_jrn_s_get_out_size( const badapt_builder_jrn_s* o ); \
    void badapt_builder_jrn_s_set_out_size( badapt_builder_jrn_s* o, sz_t size ); \
    badapt_adaptive* badapt_builder_jrn_s_build( const badapt_builder_jrn_s* o );
#define BETH_EXPAND_GROUP_badapt_jrn \
  BETH_EXPAND_ITEM_badapt_jrn_s \
  BETH_EXPAND_ITEM_badapt_builder_jrn_s

/**********************************************************************************************************************/
// source: badapt_training

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_supplier

#define TYPEOF_badapt_supplier 1387458544
#define TYPEOF_badapt_supplier_s 2616919562
#define BETH_EXPAND_GROUP_badapt_supplier \
  BCORE_FORWARD_OBJECT( badapt_supplier ); \
  typedef sz_t (*badapt_supplier_get_in_size)( const badapt_supplier* o ); \
  typedef sz_t (*badapt_supplier_get_out_size)( const badapt_supplier* o ); \
  typedef void (*badapt_supplier_fetch_sample_tin)( badapt_supplier* o, bmath_vf3_s* in ); \
  typedef void (*badapt_supplier_fetch_sample_tio)( badapt_supplier* o, bmath_vf3_s* in, bmath_vf3_s* out ); \
  typedef void (*badapt_supplier_fetch_sample_vin)( badapt_supplier* o, bmath_vf3_s* in ); \
  typedef void (*badapt_supplier_fetch_sample_vio)( badapt_supplier* o, bmath_vf3_s* in, bmath_vf3_s* out ); \
  typedef const badapt_loss* (*badapt_supplier_preferred_loss)( const badapt_supplier* o ); \
  typedef void (*badapt_supplier_setup_builder)( const badapt_supplier* o, badapt_builder* builder ); \
  BCORE_DECLARE_SPECT( badapt_supplier ) \
  { \
      bcore_spect_header_s header; \
      badapt_supplier_get_in_size get_in_size; \
      badapt_supplier_get_out_size get_out_size; \
      badapt_supplier_fetch_sample_tin fetch_sample_tin; \
      badapt_supplier_fetch_sample_tio fetch_sample_tio; \
      badapt_supplier_fetch_sample_vin fetch_sample_vin; \
      badapt_supplier_fetch_sample_vio fetch_sample_vio; \
      badapt_supplier_preferred_loss preferred_loss; \
      badapt_supplier_setup_builder setup_builder; \
  }; \
  static inline badapt_supplier* badapt_supplier_t_create( tp_t t ) { bcore_trait_assert_satisfied_type( TYPEOF_badapt_supplier, t ); return ( badapt_supplier* )bcore_inst_t_create( t ); } \
  static inline badapt_supplier* badapt_supplier_a_clone( const badapt_supplier* o ) { return ( badapt_supplier* )bcore_inst_a_clone( ( bcore_inst* )o ); } \
  static inline void badapt_supplier_a_discard( badapt_supplier* o ) { bcore_inst_a_discard( ( bcore_inst* )o ); } \
  static inline void badapt_supplier_a_replicate( badapt_supplier** o, const badapt_supplier* src ) { bcore_inst_a_replicate( ( bcore_inst** )o, ( bcore_inst* )src ); } \
  static inline sz_t badapt_supplier_a_get_in_size( const badapt_supplier* o ) { return badapt_supplier_s_get_aware( o )->get_in_size( o ); } \
  static inline bl_t badapt_supplier_a_defines_get_in_size( const badapt_supplier* o ) { return true; } \
  static inline sz_t badapt_supplier_a_get_out_size( const badapt_supplier* o ) { return badapt_supplier_s_get_aware( o )->get_out_size( o ); } \
  static inline bl_t badapt_supplier_a_defines_get_out_size( const badapt_supplier* o ) { return true; } \
  static inline void badapt_supplier_a_fetch_sample_tin( badapt_supplier* o, bmath_vf3_s* in ) { badapt_supplier_s_get_aware( o )->fetch_sample_tin( o, in ); } \
  static inline bl_t badapt_supplier_a_defines_fetch_sample_tin( const badapt_supplier* o ) { return badapt_supplier_s_get_aware( o )->fetch_sample_tin != NULL; } \
  static inline void badapt_supplier_a_fetch_sample_tio( badapt_supplier* o, bmath_vf3_s* in, bmath_vf3_s* out ) { badapt_supplier_s_get_aware( o )->fetch_sample_tio( o, in, out ); } \
  static inline bl_t badapt_supplier_a_defines_fetch_sample_tio( const badapt_supplier* o ) { return badapt_supplier_s_get_aware( o )->fetch_sample_tio != NULL; } \
  static inline void badapt_supplier_a_fetch_sample_vin( badapt_supplier* o, bmath_vf3_s* in ) { badapt_supplier_s_get_aware( o )->fetch_sample_vin( o, in ); } \
  static inline bl_t badapt_supplier_a_defines_fetch_sample_vin( const badapt_supplier* o ) { return badapt_supplier_s_get_aware( o )->fetch_sample_vin != NULL; } \
  static inline void badapt_supplier_a_fetch_sample_vio( badapt_supplier* o, bmath_vf3_s* in, bmath_vf3_s* out ) { badapt_supplier_s_get_aware( o )->fetch_sample_vio( o, in, out ); } \
  static inline bl_t badapt_supplier_a_defines_fetch_sample_vio( const badapt_supplier* o ) { return badapt_supplier_s_get_aware( o )->fetch_sample_vio != NULL; } \
  static inline const badapt_loss* badapt_supplier_a_preferred_loss( const badapt_supplier* o ) { return badapt_supplier_s_get_aware( o )->preferred_loss( o ); } \
  static inline bl_t badapt_supplier_a_defines_preferred_loss( const badapt_supplier* o ) { return badapt_supplier_s_get_aware( o )->preferred_loss != NULL; } \
  static inline void badapt_supplier_a_setup_builder( const badapt_supplier* o, badapt_builder* builder ) { badapt_supplier_s_get_aware( o )->setup_builder( o, builder ); } \
  static inline bl_t badapt_supplier_a_defines_setup_builder( const badapt_supplier* o ) { return true; } \
  void badapt_supplier_setup_builder_default( const badapt_supplier* o, badapt_builder* builder );

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_guide

#define TYPEOF_badapt_guide 4278624408
#define TYPEOF_badapt_guide_s 2128916482
#define BETH_EXPAND_GROUP_badapt_guide \
  BCORE_FORWARD_OBJECT( badapt_guide ); \
  typedef bl_t (*badapt_guide_callback)( const badapt_guide* o, badapt_training_state* state ); \
  BCORE_DECLARE_SPECT( badapt_guide ) \
  { \
      bcore_spect_header_s header; \
      badapt_guide_callback callback; \
  }; \
  static inline badapt_guide* badapt_guide_t_create( tp_t t ) { bcore_trait_assert_satisfied_type( TYPEOF_badapt_guide, t ); return ( badapt_guide* )bcore_inst_t_create( t ); } \
  static inline badapt_guide* badapt_guide_a_clone( const badapt_guide* o ) { return ( badapt_guide* )bcore_inst_a_clone( ( bcore_inst* )o ); } \
  static inline void badapt_guide_a_discard( badapt_guide* o ) { bcore_inst_a_discard( ( bcore_inst* )o ); } \
  static inline void badapt_guide_a_replicate( badapt_guide** o, const badapt_guide* src ) { bcore_inst_a_replicate( ( bcore_inst** )o, ( bcore_inst* )src ); } \
  static inline bl_t badapt_guide_a_callback( const badapt_guide* o, badapt_training_state* state ) { return badapt_guide_s_get_aware( o )->callback( o, state ); } \
  static inline bl_t badapt_guide_a_defines_callback( const badapt_guide* o ) { return true; }

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_training_state

#define TYPEOF_badapt_training_state 2190295860
#define TYPEOF_badapt_training_state_s 3622237734
#define BETH_EXPAND_GROUP_badapt_training_state \
  BCORE_FORWARD_OBJECT( badapt_training_state ); \
  typedef void (*badapt_training_state_set_adaptive)( badapt_training_state* o, badapt_adaptive* adaptive ); \
  typedef badapt_adaptive* (*badapt_training_state_get_adaptive)( const badapt_training_state* o ); \
  typedef void (*badapt_training_state_set_supplier)( badapt_training_state* o, badapt_supplier* supplier ); \
  typedef badapt_supplier* (*badapt_training_state_get_supplier)( const badapt_training_state* o ); \
  typedef void (*badapt_training_state_set_progress)( badapt_training_state* o, badapt_progress_s* progress ); \
  typedef badapt_progress_s* (*badapt_training_state_get_progress)( const badapt_training_state* o ); \
  typedef void (*badapt_training_state_set_guide)( badapt_training_state* o, badapt_guide* guide ); \
  typedef badapt_guide* (*badapt_training_state_get_guide)( const badapt_training_state* o ); \
  BCORE_DECLARE_SPECT( badapt_training_state ) \
  { \
      bcore_spect_header_s header; \
      badapt_training_state_set_adaptive set_adaptive; \
      badapt_training_state_get_adaptive get_adaptive; \
      badapt_training_state_set_supplier set_supplier; \
      badapt_training_state_get_supplier get_supplier; \
      badapt_training_state_set_progress set_progress; \
      badapt_training_state_get_progress get_progress; \
      badapt_training_state_set_guide set_guide; \
      badapt_training_state_get_guide get_guide; \
  }; \
  static inline badapt_training_state* badapt_training_state_t_create( tp_t t ) { bcore_trait_assert_satisfied_type( TYPEOF_badapt_training_state, t ); return ( badapt_training_state* )bcore_inst_t_create( t ); } \
  static inline badapt_training_state* badapt_training_state_a_clone( const badapt_training_state* o ) { return ( badapt_training_state* )bcore_inst_a_clone( ( bcore_inst* )o ); } \
  static inline void badapt_training_state_a_discard( badapt_training_state* o ) { bcore_inst_a_discard( ( bcore_inst* )o ); } \
  static inline void badapt_training_state_a_replicate( badapt_training_state** o, const badapt_training_state* src ) { bcore_inst_a_replicate( ( bcore_inst** )o, ( bcore_inst* )src ); } \
  static inline void badapt_training_state_a_set_adaptive( badapt_training_state* o, badapt_adaptive* adaptive ) { badapt_training_state_s_get_aware( o )->set_adaptive( o, adaptive ); } \
  static inline bl_t badapt_training_state_a_defines_set_adaptive( const badapt_training_state* o ) { return badapt_training_state_s_get_aware( o )->set_adaptive != NULL; } \
  static inline badapt_adaptive* badapt_training_state_a_get_adaptive( const badapt_training_state* o ) { return badapt_training_state_s_get_aware( o )->get_adaptive( o ); } \
  static inline bl_t badapt_training_state_a_defines_get_adaptive( const badapt_training_state* o ) { return badapt_training_state_s_get_aware( o )->get_adaptive != NULL; } \
  static inline void badapt_training_state_a_set_supplier( badapt_training_state* o, badapt_supplier* supplier ) { badapt_training_state_s_get_aware( o )->set_supplier( o, supplier ); } \
  static inline bl_t badapt_training_state_a_defines_set_supplier( const badapt_training_state* o ) { return badapt_training_state_s_get_aware( o )->set_supplier != NULL; } \
  static inline badapt_supplier* badapt_training_state_a_get_supplier( const badapt_training_state* o ) { return badapt_training_state_s_get_aware( o )->get_supplier( o ); } \
  static inline bl_t badapt_training_state_a_defines_get_supplier( const badapt_training_state* o ) { return badapt_training_state_s_get_aware( o )->get_supplier != NULL; } \
  static inline void badapt_training_state_a_set_progress( badapt_training_state* o, badapt_progress_s* progress ) { badapt_training_state_s_get_aware( o )->set_progress( o, progress ); } \
  static inline bl_t badapt_training_state_a_defines_set_progress( const badapt_training_state* o ) { return badapt_training_state_s_get_aware( o )->set_progress != NULL; } \
  static inline badapt_progress_s* badapt_training_state_a_get_progress( const badapt_training_state* o ) { return badapt_training_state_s_get_aware( o )->get_progress( o ); } \
  static inline bl_t badapt_training_state_a_defines_get_progress( const badapt_training_state* o ) { return badapt_training_state_s_get_aware( o )->get_progress != NULL; } \
  static inline void badapt_training_state_a_set_guide( badapt_training_state* o, badapt_guide* guide ) { badapt_training_state_s_get_aware( o )->set_guide( o, guide ); } \
  static inline bl_t badapt_training_state_a_defines_set_guide( const badapt_training_state* o ) { return badapt_training_state_s_get_aware( o )->set_guide != NULL; } \
  static inline badapt_guide* badapt_training_state_a_get_guide( const badapt_training_state* o ) { return badapt_training_state_s_get_aware( o )->get_guide( o ); } \
  static inline bl_t badapt_training_state_a_defines_get_guide( const badapt_training_state* o ) { return badapt_training_state_s_get_aware( o )->get_guide != NULL; }

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_trainer

#define TYPEOF_badapt_trainer 1053730437
#define TYPEOF_badapt_trainer_s 385523047
#define BETH_EXPAND_GROUP_badapt_trainer \
  BCORE_FORWARD_OBJECT( badapt_trainer ); \
  typedef void (*badapt_trainer_run)( const badapt_trainer* o, badapt_training_state* state ); \
  typedef badapt_training_state* (*badapt_trainer_create_state)( const badapt_trainer* o ); \
  BCORE_DECLARE_SPECT( badapt_trainer ) \
  { \
      bcore_spect_header_s header; \
      badapt_trainer_run run; \
      badapt_trainer_create_state create_state; \
  }; \
  static inline badapt_trainer* badapt_trainer_t_create( tp_t t ) { bcore_trait_assert_satisfied_type( TYPEOF_badapt_trainer, t ); return ( badapt_trainer* )bcore_inst_t_create( t ); } \
  static inline badapt_trainer* badapt_trainer_a_clone( const badapt_trainer* o ) { return ( badapt_trainer* )bcore_inst_a_clone( ( bcore_inst* )o ); } \
  static inline void badapt_trainer_a_discard( badapt_trainer* o ) { bcore_inst_a_discard( ( bcore_inst* )o ); } \
  static inline void badapt_trainer_a_replicate( badapt_trainer** o, const badapt_trainer* src ) { bcore_inst_a_replicate( ( bcore_inst** )o, ( bcore_inst* )src ); } \
  static inline void badapt_trainer_a_run( const badapt_trainer* o, badapt_training_state* state ) { badapt_trainer_s_get_aware( o )->run( o, state ); } \
  static inline bl_t badapt_trainer_a_defines_run( const badapt_trainer* o ) { return true; } \
  static inline badapt_training_state* badapt_trainer_a_create_state( const badapt_trainer* o ) { return badapt_trainer_s_get_aware( o )->create_state( o ); } \
  static inline bl_t badapt_trainer_a_defines_create_state( const badapt_trainer* o ) { return true; }

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_training_objects

#define TYPEOF_badapt_training_objects 446020241
  #define TYPEOF_badapt_progress_s 1786273765
  #define BETH_EXPAND_ITEM_badapt_progress_s \
    BCORE_DECLARE_OBJECT( badapt_progress_s ) \
      {sz_t iteration;f3_t error;f3_t improved;f3_t bias;};
  #define TYPEOF_badapt_training_state_std_s 3157709416
  #define BETH_EXPAND_ITEM_badapt_training_state_std_s \
    BCORE_DECLARE_OBJECT( badapt_training_state_std_s ) \
      {aware_t _;badapt_progress_s progress;badapt_adaptive* adaptive;badapt_supplier* supplier;badapt_guide* guide;}; \
    void badapt_training_state_std_s_set_adaptive( badapt_training_state_std_s* o, badapt_adaptive* adaptive ); \
    badapt_adaptive* badapt_training_state_std_s_get_adaptive( const badapt_training_state_std_s* o ); \
    void badapt_training_state_std_s_set_supplier( badapt_training_state_std_s* o, badapt_supplier* supplier ); \
    badapt_supplier* badapt_training_state_std_s_get_supplier( const badapt_training_state_std_s* o ); \
    void badapt_training_state_std_s_set_progress( badapt_training_state_std_s* o, badapt_progress_s* progress ); \
    badapt_progress_s* badapt_training_state_std_s_get_progress( const badapt_training_state_std_s* o ); \
    void badapt_training_state_std_s_set_guide( badapt_training_state_std_s* o, badapt_guide* guide ); \
    badapt_guide* badapt_training_state_std_s_get_guide( const badapt_training_state_std_s* o );
  #define TYPEOF_badapt_guide_std_s 1442673228
  #define BETH_EXPAND_ITEM_badapt_guide_std_s \
    BCORE_DECLARE_OBJECT( badapt_guide_std_s ) \
      {aware_t _;f3_t annealing_factor;bcore_sink* log;}; \
    void badapt_guide_std_s_init_x( badapt_guide_std_s* o ); \
    bl_t badapt_guide_std_s_callback( const badapt_guide_std_s* o, badapt_training_state* state );
#define BETH_EXPAND_GROUP_badapt_training_objects \
  BETH_EXPAND_ITEM_badapt_progress_s \
  BETH_EXPAND_ITEM_badapt_training_state_std_s \
  BETH_EXPAND_ITEM_badapt_guide_std_s

/**********************************************************************************************************************/
// source: badapt_trainer

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_trainer_objects

#define TYPEOF_badapt_trainer_objects 2941531770
  #define TYPEOF_badapt_trainer_batch_s 3745932548
  #define BETH_EXPAND_ITEM_badapt_trainer_batch_s \
    BCORE_DECLARE_OBJECT( badapt_trainer_batch_s ) \
      {aware_t _;badapt_loss* loss;sz_t batch_size;sz_t batch_cycles_per_fetch;sz_t fetch_cycles_per_iteration;sz_t valid_size;sz_t max_iterations;}; \
    void badapt_trainer_batch_s_run( const badapt_trainer_batch_s* o, badapt_training_state* state ); \
    badapt_training_state* badapt_trainer_batch_s_create_state( const badapt_trainer_batch_s* o );
  #define TYPEOF_badapt_sample_batch_s 3659720691
  #define BETH_EXPAND_ITEM_badapt_sample_batch_s \
    BCORE_DECLARE_OBJECT( badapt_sample_batch_s ) \
      {bmath_vf3_s in;bmath_vf3_s out;};
  #define TYPEOF_badapt_arr_sample_batch_s 1005014423
  #define BETH_EXPAND_ITEM_badapt_arr_sample_batch_s \
    BCORE_DECLARE_OBJECT( badapt_arr_sample_batch_s ) \
      {aware_t _;BCORE_ARRAY_DYN_SOLID_STATIC_S( badapt_sample_batch_s, arr_ );}; \
    static inline void badapt_arr_sample_batch_s_set_space( badapt_arr_sample_batch_s* o, sz_t size ) { bcore_array_t_set_space( TYPEOF_badapt_arr_sample_batch_s, ( bcore_array* )o, size ); } \
    static inline void badapt_arr_sample_batch_s_set_size( badapt_arr_sample_batch_s* o, sz_t size ) { bcore_array_t_set_size( TYPEOF_badapt_arr_sample_batch_s, ( bcore_array* )o, size ); } \
    static inline void badapt_arr_sample_batch_s_clear( badapt_arr_sample_batch_s* o ) { bcore_array_t_set_space( TYPEOF_badapt_arr_sample_batch_s, ( bcore_array* )o, 0 ); } \
    static inline void badapt_arr_sample_batch_s_push_c( badapt_arr_sample_batch_s* o, const badapt_sample_batch_s* v ) { bcore_array_t_push( TYPEOF_badapt_arr_sample_batch_s, ( bcore_array* )o, sr_twc( TYPEOF_badapt_sample_batch_s, v ) ); } \
    static inline void badapt_arr_sample_batch_s_push_d( badapt_arr_sample_batch_s* o,       badapt_sample_batch_s* v ) { bcore_array_t_push( TYPEOF_badapt_arr_sample_batch_s, ( bcore_array* )o, sr_tsd( TYPEOF_badapt_sample_batch_s, v ) ); } \
    static inline badapt_sample_batch_s* badapt_arr_sample_batch_s_push( badapt_arr_sample_batch_s* o ) \
    { \
        bcore_array_t_push( TYPEOF_badapt_arr_sample_batch_s, ( bcore_array* )o, sr_null() ); \
        return bcore_array_t_get_last( TYPEOF_badapt_arr_sample_batch_s, ( bcore_array* )o ).o; \
    }
#define BETH_EXPAND_GROUP_badapt_trainer_objects \
  BETH_EXPAND_ITEM_badapt_trainer_batch_s \
  BETH_EXPAND_ITEM_badapt_sample_batch_s \
  BETH_EXPAND_ITEM_badapt_arr_sample_batch_s

/**********************************************************************************************************************/

vd_t badapt_precoded_signal_handler( const bcore_signal_s* o );

#endif // BADAPT_PRECODED_H
