/** Copyright 2019 Johannes Bernhard Steffens
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/** bcore_spect_via_call is a perspective defining a set of callback functions
 *  related to via-access.
 */

#ifndef BCORE_SPECT_VIA_CALL_H
#define BCORE_SPECT_VIA_CALL_H

#include "bcore_plant_compiler.h"
#include "bcore_planted.h"
#include "bcore_trait.h"

/**********************************************************************************************************************/

#ifdef TYPEOF_bcore_via_call
BETH_PRECODE( bcore_via_call )
#ifdef BETH_PRECODE_SECTION // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    /** Called when object was mutated through via-access.
     *  Note that this signal is generated by object modifiers (e.g. interpreter)
     *  using the via perspective.
     *  It is not generated by the via perspective itself.
     */
    feature 'ptx' void mutated( mutable );
#endif // BETH_PRECODE_SECTION ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#endif // TYPEOF_bcore_via_call

/**********************************************************************************************************************/

vd_t bcore_spect_via_call_signal_handler( const bcore_signal_s* o );

/**********************************************************************************************************************/

#endif  // BCORE_SPECT_VIA_CALL_H
